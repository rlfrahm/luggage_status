<?php

/**
 * Implements hook_menu()
 */
function luggage_status_menu() {
  $items = array();

  $token = variable_get('luggage_status_client_token');
  if(!$token) {
    $token = luggage_status_generate_new_token();
    variable_set('luggage_status_client_token', $token);
  }

  $items['luggage/status'] = array(
    'access arguments' => array('access content'),
    'page callback' => 'luggage_status_status_callback',
//    'page arguments' => array(2),
    'delivery callback' => 'drupal_json_output',
  );

  $items['admin/config/dashboard/luggage_dashboard'] = array(
    'title' => 'Luggage Dashboard',
    'description' => 'Configuration for your Luggage dashboard.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('luggage_status_config_form'),
    'access arguments' => array('access administrative pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function luggage_status_status_callback() {
  if(variable_get('luggage_status_client_token') == $_REQUEST['token']) {
    return json_decode(StatusFile::get());
  } else {
    return NULL;
  }
}

function luggage_status_config_form($form, &$form_state) {
  $form['luggage_status_client_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Client Token'),
    '#default_value' => variable_get('luggage_status_client_token', luggage_status_generate_new_token()),
    '#description' => t('Copy & paste this token into the node related to this site\'s environment on your Luggage dashboard.'),
    '#required' => TRUE,
    '#disabled' => TRUE,
    '#prefix' => '<div id="client-token">',
    '#suffix' => '</div>',
  );

  $form['luggage_status_regenerate_client_token'] = array(
    '#type' => 'button',
    '#attributes' => array('onclick' => 'return (false);'),
    '#value' => t('Generate New Token'),
    '#ajax' => array(
      'callback' => 'luggage_status_regenerate_token_ajax_callback',
      'effect' => 'fade',
      'method' => 'replace',
      'wrapper' => 'client-token',
    ),
  );

  return system_settings_form($form);
}

/**
 * Custom function
 */
function luggage_status_regenerate_token_ajax_callback($form, $form_state) {
  $token = luggage_status_generate_new_token();
  variable_set('luggage_status_client_token', $token);
  $form['luggage_status_client_token']['#value'] = $token;
  return $form['luggage_status_client_token'];
}

/**
 * Custom function
 */
function luggage_status_generate_new_token() {
  return uniqid(mt_rand(), TRUE);
}

/**
 * Implements hook_cron()
 */
function luggage_status_cron() {
  try {
//    $status = system_status();
//    $status = shell_exec('drush 2>&1; echo $?');
    $sf = new StatusFile();
    $sf->add('url',$GLOBALS['base_url']);

    $file = file_get_contents($GLOBALS['base_url'] . '/LUGGAGE_CHANGELOG.txt');
    $pattern = preg_quote('Luggage', '/');
    $pattern = "/^.*$pattern.*\$/m";
    preg_match($pattern, $file, $matches);
    if($matches)
      $sf->add('luggage_version',$matches[0]);

    $file = file_get_contents($GLOBALS['base_url'] . '/CHANGELOG.txt');
    $pattern = preg_quote('Drupal', '/');
    $pattern = "/^.*$pattern.*\$/m";
    preg_match($pattern, $file, $matches);
    if($matches)
      $sf->add('drupal_version',$matches[0]);

//    $sf->add('luggage_core',system_get_info('module','luggage_core'));
    $sf->write();
  } catch (Exception $e) {
    watchdog(WATCHDOG_ERROR,$e);
  }
}

class StatusFile {

  protected $contents = array();
  protected static $directory = 'public://status';
  protected static $filename = 'status.json';

  public function add($key,$value) {
    $this->contents[$key] = $value;
  }

  public function write() {
    file_prepare_directory($dir,FILE_CREATE_DIRECTORY);
    file_save_data(json_encode($this->contents),$this->getFilePath(),FILE_EXISTS_REPLACE);
  }

  protected static function getFilePath() {
    return StatusFile::$directory . '/' . StatusFile::$filename;
  }

  public static function get() {
    return file_get_contents(StatusFile::getFilePath());
  }
}